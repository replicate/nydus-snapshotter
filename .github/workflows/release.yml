name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

env:
  CARGO_TERM_COLOR: always
  IMAGE_NAME: nydus-snapshotter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.6"
      - name: cache go mod
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            tools/optimizer-server/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('tools/optimizer-server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo
      - name: build nydus-snapshotter and optimizer
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
          export PATH=$PATH:$(go env GOPATH)/bin
          make static-release
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nydus-snapshotter_artifacts
          path: |
            bin/containerd-nydus-grpc
            bin/optimizer-nri-plugin
            bin/optimizer-server
  upload:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nydus-snapshotter_artifacts
          path: nydus-snapshotter
      - name: Upload Artifacts
        run: |
          tag=$(echo $GITHUB_REF | cut -d/ -f3-)
          tarball="nydus-snapshotter-$tag-x86_64.tgz"
          chmod +x nydus-snapshotter/*
          tar cf - nydus-snapshotter | gzip > ${tarball}
          echo "tag=$tag" >> $GITHUB_ENV
          echo "tarball=$tarball" >> $GITHUB_ENV

          tarball_shasum="$tarball.sha256sum"
          sha256sum $tarball > $tarball_shasum
          echo "tarball_shasum=$tarball_shasum" >> $GITHUB_ENV
      - name: Prerelease
        if: github.event_name == 'push' && contains(github.ref_name, '-')
        uses: softprops/action-gh-release@v1
        with:
          name: "Nydus Snapshotter ${{ env.tag }} Release"
          prerelease: true
          generate_release_notes: true
          files: |
            ${{ env.tarball }}
            ${{ env.tarball_shasum }}
      # - name: Release
      #   if: github.event_name == 'push' && !contains(github.ref_name, '-')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: "Nydus Snapshotter ${{ env.tag }} Release"
      #     generate_release_notes: true
      #     files: |
      #       ${{ env.tarball }}
      #       ${{ env.tarball_shasum }}

  publish-image:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/1025538909507/locations/global/workloadIdentityPools/github/providers/github-actions'
          service_account: 'builder@replicate-production.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: 'Log into US Artifact Registry'
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Log into Europe Artifact Registry'
        uses: docker/login-action@v2
        with:
          registry: europe-docker.pkg.dev
          username: oauth2accesstoken
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Log into Asia Artifact Registry'
        uses: docker/login-action@v2
        with:
          registry: asia-docker.pkg.dev
          username: oauth2accesstoken
          password: '${{ steps.auth.outputs.access_token }}'

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: nydus-snapshotter_artifacts
          path: misc/snapshotter
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            us-docker.pkg.dev/replicate-production/replicate-services-us/${{ env.IMAGE_NAME }}
            europe-docker.pkg.dev/replicate-production/replicate-services-europe/${{ env.IMAGE_NAME }}
            asia-docker.pkg.dev/replicate-production/replicate-services-asia/${{ env.IMAGE_NAME }}
      - name: build and push nydus-snapshotter image
        uses: docker/build-push-action@v3
        with:
          context: misc/snapshotter
          file: misc/snapshotter/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
